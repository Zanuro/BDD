-- MySQL Script generated by MySQL Workbench
-- jue 07 nov 2019 16:55:48 WET
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering


-- -----------------------------------------------------
-- Schema farmacia
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS farmacia ;
\c farmacia ;

-- -----------------------------------------------------
-- Table familia
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS familia (
  nombre VARCHAR(25) NOT NULL,
  incompatibilidades VARCHAR(45) NULL,
  PRIMARY KEY (nombre))
;


-- -----------------------------------------------------
-- Table enfermedad
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS enfermedad (
  nombre VARCHAR(45) NOT NULL,
  sintoma VARCHAR(45) NULL,
  PRIMARY KEY (nombre))
;


-- -----------------------------------------------------
-- Table laboratorio
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS laboratorio (
  codigo VARCHAR(15) NOT NULL,
  nombre VARCHAR(45) NULL,
  contacto VARCHAR(45) NULL,
  telefono VARCHAR(45) NULL,
  calle VARCHAR(45) NULL,
  numero VARCHAR(45) NULL,
  codpostal VARCHAR(45) NULL,
  PRIMARY KEY (codigo))
;


-- -----------------------------------------------------
-- Table medicamento
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS medicamento (
  codigo VARCHAR(15) NOT NULL,
  nombre VARCHAR(45) NULL,
  igic DECIMAL(18,2) NULL,
  precio DECIMAL(18,2) NULL,
  posologia VARCHAR(45) NOT NULL,
  tipo VARCHAR(45) NOT NULL,
  laboratorio VARCHAR(15) NULL,
  PRIMARY KEY (codigo),
  CONSTRAINT fk_medicamento_laboratorio
    FOREIGN KEY (laboratorio)
    REFERENCES laboratorio (codigo)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;


-- -----------------------------------------------------
-- Table medicamento_familia
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS medicamento_familia (
  codigo VARCHAR(15) NOT NULL,
  nombre_familia VARCHAR(45) NOT NULL,
  PRIMARY KEY (codigo, nombre_familia),
  CONSTRAINT fk_medicamento_familia_medicamento
    FOREIGN KEY (codigo)
    REFERENCES medicamento (codigo)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT fk_medicamento_familia_familia
    FOREIGN KEY (nombre_familia)
    REFERENCES familia (nombre)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
;


-- -----------------------------------------------------
-- Table familia_enfermedad
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS familia_enfermedad (
  nombre_familia VARCHAR(25) NOT NULL,
  nombre_enfermedad VARCHAR(45) NOT NULL,
  PRIMARY KEY (nombre_familia, nombre_enfermedad),
  CONSTRAINT fk_familia_enfermedad_familia
    FOREIGN KEY (nombre_familia)
    REFERENCES familia (nombre)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT fk_familia_enfermedad_enfermedad
    FOREIGN KEY (nombre_enfermedad)
    REFERENCES enfermedad (nombre)
    ON DELETE CASCADE
    ON UPDATE RESTRICT)
;

-- -----------------------------------------------------
-- Table cliente_credito
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS cliente_credito (
  dni VARCHAR(9) NOT NULL,
  nombre VARCHAR(45) NULL,
  cuentabancaria VARCHAR(45) NULL,
  PRIMARY KEY (dni))
;


-- -----------------------------------------------------
-- Table compra
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS compra (
  fecha TIMESTAMP NOT NULL,
  importe DECIMAL(18,2) NOT NULL DEFAULT 0.0,
  dni VARCHAR(9) NULL,
  PRIMARY KEY (fecha),
  CONSTRAINT fk_compra_cliente_credito
    FOREIGN KEY (dni)
    REFERENCES cliente_credito (dni)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
;


-- -----------------------------------------------------
-- Table compra_medicamento
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS compra_medicamento (
  codigo VARCHAR(15) NOT NULL,
  fecha_compra TIMESTAMP NOT NULL,
  unidades INT NOT NULL DEFAULT 0,
  igic DECIMAL(18,2) NOT NULL DEFAULT 0.0,
  importe DECIMAL(18,2) NOT NULL DEFAULT 0.0,
  PRIMARY KEY (codigo, fecha_compra),
  CONSTRAINT fk_compra_medicamento_medicamento
    FOREIGN KEY (codigo)
    REFERENCES medicamento (codigo)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT fk_compra_medicamento_compra
    FOREIGN KEY (fecha_compra)
    REFERENCES compra (fecha)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
;


-- -----------------------------------------------------
-- Table pago_credito
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS pago_credito (
  mes INT NOT NULL,
  año INT NOT NULL,
  fecha_compra TIMESTAMP NOT NULL,
  cantidad DECIMAL(18,2) NULL,
  PRIMARY KEY (mes, año, fecha_compra),
  CONSTRAINT fk_pago_credito_compra
    FOREIGN KEY (fecha_compra)
    REFERENCES compra (fecha)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
;



-- -----------------------------------------------------
-- TRIGGERS
-- -----------------------------------------------------

--
-- Función que recalcula el importe en la tabla 'compra'
-- usando el registro modificado de la tabla 'compra_medicamento'
--
CREATE OR REPLACE FUNCTION actualizar_importe_compra()
RETURNS trigger AS $actualizar_importe_compra$
DECLARE
  total DECIMAL(18,2);
BEGIN
  IF (TG_OP = 'DELETE') THEN
    -- Se elimino la fila de compra_medicamento
    SELECT importe INTO total FROM compra WHERE fecha = OLD.fecha_compra;
    total := total - OLD.importe;
    UPDATE compra SET importe=total WHERE fecha = OLD.fecha_compra;
  	RETURN OLD;
  
  ELSIF (TG_OP = 'INSERT') THEN
    -- Se inserto una fila en compra_medicamento
    SELECT importe INTO total FROM compra WHERE fecha = NEW.fecha_compra;
    total := total + NEW.importe;
    UPDATE compra SET importe=total WHERE fecha = NEW.fecha_compra;
    RETURN NEW;

  ELSIF (TG_OP = 'UPDATE') THEN
    -- Se actualizo la fila de compra_medicamento
    IF (OLD.fecha_compra = NEW.fecha_compra) THEN
    	-- No se modificó el campo fecha_compra
    	SELECT importe INTO total FROM compra WHERE fecha = NEW.fecha_compra;
    	total := total - OLD.importe;
    	total := total + NEW.importe;
    	UPDATE compra SET importe=total WHERE fecha = NEW.fecha_compra;
    ELSE
    	-- Se modificó el campo fecha_compra
    	SELECT importe INTO total FROM compra WHERE fecha = NEW.fecha_compra;
    	total := total + NEW.importe;
    	UPDATE compra SET importe=total WHERE fecha = NEW.fecha_compra;
    	
    	SELECT importe INTO total FROM compra WHERE fecha = OLD.fecha_compra;
    	total := total - OLD.importe;
    	UPDATE compra SET importe=total WHERE fecha = OLD.fecha_compra;
    END IF;
  	RETURN NEW;
  END IF;

   RETURN NULL;
END;
$actualizar_importe_compra$ LANGUAGE plpgsql;



--
-- Disparador que ejecuta la función 'actualizar_importe_compra' cuando
-- se inserta, actualiza o elimina registro de la tabla 'compra_medicamento'.
--
CREATE TRIGGER actualizar_compra
AFTER INSERT OR UPDATE OR DELETE ON compra_medicamento
FOR EACH ROW
EXECUTE PROCEDURE actualizar_importe_compra();




-- -----------------------------------------------------
-- Data for table familia
-- -----------------------------------------------------
START TRANSACTION;

INSERT INTO familia (nombre, incompatibilidades) VALUES ('Antiinflamatorio', 'Sedante');
INSERT INTO familia (nombre, incompatibilidades) VALUES ('Antipiretico', NULL);
INSERT INTO familia (nombre, incompatibilidades) VALUES ('Analgesico', 'Sedante');
INSERT INTO familia (nombre, incompatibilidades) VALUES ('Antibiotico', 'Antiviral');
INSERT INTO familia (nombre, incompatibilidades) VALUES ('Sedante', 'Analgesico');
INSERT INTO familia (nombre, incompatibilidades) VALUES ('Antiviral', 'Antibiotico');
INSERT INTO familia (nombre, incompatibilidades) VALUES ('Antihistaminico', 'Antiarritmico');

COMMIT;


-- -----------------------------------------------------
-- Data for table enfermedad
-- -----------------------------------------------------
START TRANSACTION;

INSERT INTO enfermedad (nombre, sintoma) VALUES ('Gripe', 'Fiebre');
INSERT INTO enfermedad (nombre, sintoma) VALUES ('Artritis', 'Dolor en las articulaciones');
INSERT INTO enfermedad (nombre, sintoma) VALUES ('Amigdalitis', 'Dolor de garganta');
INSERT INTO enfermedad (nombre, sintoma) VALUES ('Acidez de estomago', 'inflamacion estomago');
INSERT INTO enfermedad (nombre, sintoma) VALUES ('Cardiovasculares', 'inflamacion vasos sanguineos');
INSERT INTO enfermedad (nombre, sintoma) VALUES ('Dolor de cabeza', 'sensibilidad al ruido');
INSERT INTO enfermedad (nombre, sintoma) VALUES ('Estres', 'tension muscular');

COMMIT;


-- -----------------------------------------------------
-- Data for table laboratorio
-- -----------------------------------------------------
START TRANSACTION;

INSERT INTO laboratorio (codigo, nombre, contacto, telefono, calle, numero, codpostal) VALUES ('AB203FC201', 'Bayer', 'Juan Dominguez', '612121912', 'Avenida Baix Llobregat', '3-5', '33567');
INSERT INTO laboratorio (codigo, nombre, contacto, telefono, calle, numero, codpostal) VALUES ('EC83203BVL', 'Pfizer', 'Michael Bryan', '682194213', 'Calle Carvajal', '2', '38105');
INSERT INTO laboratorio (codigo, nombre, contacto, telefono, calle, numero, codpostal) VALUES ('128OVQ2MD', 'Novartis', 'John Smith', '693833221', 'Calle Sinesio Delgado', '10', '38000');
INSERT INTO laboratorio (codigo, nombre, contacto, telefono, calle, numero, codpostal) VALUES ('921VMDOCI', 'Novo Nordisk', 'David Sanchez', '685930923', 'Calle via de los Poblados', '3', '39567');
INSERT INTO laboratorio (codigo, nombre, contacto, telefono, calle, numero, codpostal) VALUES ('K3XOM29GB', 'Cinfa', 'Juan Dominguez', '679433423', 'Avenida Baix Llobregat', '3-5', '39770');

COMMIT;


-- -----------------------------------------------------
-- Data for table medicamento
-- -----------------------------------------------------
START TRANSACTION;

INSERT INTO medicamento (codigo, nombre, igic, precio, posologia, tipo, laboratorio) VALUES ('123456', 'Termalgin 1000mg', 3, 4.25, 'Comprimido', 'Libre', 'K3XOM29GB');
INSERT INTO medicamento (codigo, nombre, igic, precio, posologia, tipo, laboratorio) VALUES ('112233', 'Penicilina', 3, 10.20, 'Inyectable', 'Receta', 'AB203FC201');
INSERT INTO medicamento (codigo, nombre, igic, precio, posologia, tipo, laboratorio) VALUES ('445566', 'Neubrufen 600mg', 3, 6.12, 'Comprimido', 'Libre', 'K3XOM29GB');
INSERT INTO medicamento (codigo, nombre, igic, precio, posologia, tipo, laboratorio) VALUES ('21311B382AC', 'Aspirina', 0.00, 7.78, 'Comprimidos', 'Libre', 'AB203FC201');
INSERT INTO medicamento (codigo, nombre, igic, precio, posologia, tipo, laboratorio) VALUES ('21992113482BB', 'Omeprazol', 2.35, 3.56, 'Comprimidos', 'Receta', 'EC83203BVL');
INSERT INTO medicamento (codigo, nombre, igic, precio, posologia, tipo, laboratorio) VALUES ('9208132991F', 'Paracetamol', 0.00, 2.89, 'Comprimidos', 'Libre', '128OVQ2MD');
INSERT INTO medicamento (codigo, nombre, igic, precio, posologia, tipo, laboratorio) VALUES ('921008472910TU', 'Furosemida', 4.55, 12.89, 'Jarabe', 'Receta', '921VMDOCI');
INSERT INTO medicamento (codigo, nombre, igic, precio, posologia, tipo, laboratorio) VALUES ('2191918450UI', 'Colecalciferol', 1.55, 9.99, 'Inyectable', 'Libre', 'K3XOM29GB');

COMMIT;


-- -----------------------------------------------------
-- Data for table medicamento_familia
-- -----------------------------------------------------
START TRANSACTION;

INSERT INTO medicamento_familia (codigo, nombre_familia) VALUES ('123456', 'Analgesico');
INSERT INTO medicamento_familia (codigo, nombre_familia) VALUES ('112233', 'Antibiotico');
INSERT INTO medicamento_familia (codigo, nombre_familia) VALUES ('445566', 'Antiinflamatorio');
INSERT INTO medicamento_familia (codigo, nombre_familia) VALUES ('21311B382AC', 'Analgesico');
INSERT INTO medicamento_familia (codigo, nombre_familia) VALUES ('21992113482BB', 'Sedante');
INSERT INTO medicamento_familia (codigo, nombre_familia) VALUES ('9208132991F', 'Antiviral');
INSERT INTO medicamento_familia (codigo, nombre_familia) VALUES ('921008472910TU', 'Antihistaminico');
INSERT INTO medicamento_familia (codigo, nombre_familia) VALUES ('2191918450UI', 'Antibiotico');

COMMIT;


-- -----------------------------------------------------
-- Data for table familia_enfermedad
-- -----------------------------------------------------
START TRANSACTION;

INSERT INTO familia_enfermedad (nombre_familia, nombre_enfermedad) VALUES ('Analgesico', 'Artritis');
INSERT INTO familia_enfermedad (nombre_familia, nombre_enfermedad) VALUES ('Antibiotico', 'Amigdalitis');
INSERT INTO familia_enfermedad (nombre_familia, nombre_enfermedad) VALUES ('Analgesico', 'Gripe');
INSERT INTO familia_enfermedad (nombre_familia, nombre_enfermedad) VALUES ('Analgesico', 'Dolor de cabeza');
INSERT INTO familia_enfermedad (nombre_familia, nombre_enfermedad) VALUES ('Sedante', 'Estres');
INSERT INTO familia_enfermedad (nombre_familia, nombre_enfermedad) VALUES ('Antihistaminico', 'Cardiovasculares');
INSERT INTO familia_enfermedad (nombre_familia, nombre_enfermedad) VALUES ('Antiviral', 'Acidez de estomago');

COMMIT;


-- -----------------------------------------------------
-- Data for table cliente_credito
-- -----------------------------------------------------
START TRANSACTION;

INSERT INTO cliente_credito (dni, nombre, cuentabancaria) VALUES ('11111111A', 'Amancio Ortega', 'ES00 0000 0000 0000 0000 0000');
INSERT INTO cliente_credito (dni, nombre, cuentabancaria) VALUES ('22222222B', 'Mark Zuckerberg', 'ES10 1111 0000 1111 0000 1111');
INSERT INTO cliente_credito (dni, nombre, cuentabancaria) VALUES ('33333333C', 'Tim Cook', 'ES20 2222 0000 2222 0000 2222');
INSERT INTO cliente_credito (dni, nombre, cuentabancaria) VALUES ('15329123B', 'Juan Dominguez', '218539537329');
INSERT INTO cliente_credito (dni, nombre, cuentabancaria) VALUES ('18381209C', 'Maria Sanchez', '482392392392');
INSERT INTO cliente_credito (dni, nombre, cuentabancaria) VALUES ('18379912A', 'Pedro Gonzalez', '594833002233');
INSERT INTO cliente_credito (dni, nombre, cuentabancaria) VALUES ('17592014T', 'Tomas Rodriguez', '859403321233');
INSERT INTO cliente_credito (dni, nombre, cuentabancaria) VALUES ('12392920A', 'Alvaro Garcia', '128542123353');

COMMIT;


-- -----------------------------------------------------
-- Data for table compra
-- -----------------------------------------------------
START TRANSACTION;

INSERT INTO compra (fecha, importe, dni) VALUES ('2019-11-08 10:35:00', 0, '11111111A');
INSERT INTO compra (fecha, importe, dni) VALUES ('2019-11-08 10:45:00', 0, '22222222B');
INSERT INTO compra (fecha, importe, dni) VALUES ('2019-11-08 10:55:00', 0, '33333333C');
INSERT INTO compra (fecha, importe, dni) VALUES ('2019-11-08 11:05:00', 0, NULL);
INSERT INTO compra (fecha, importe, dni) VALUES ('2019-07-14T14:21:36.1+01:00', 0, '15329123B');
INSERT INTO compra (fecha, importe, dni) VALUES ('2019-06-23T08:07:45.1+01:00', 0, '18381209C');
INSERT INTO compra (fecha, importe, dni) VALUES ('2019-09-11T22:05:53.1+01:00', 0, '18379912A');
INSERT INTO compra (fecha, importe, dni) VALUES ('2019-07-17T17:38:43.1+01:00', 0, '17592014T');
INSERT INTO compra (fecha, importe, dni) VALUES ('2019-12-29T19:43:21.1+01:00', 0, '12392920A');

COMMIT;


-- -----------------------------------------------------
-- Data for table compra_medicamento
-- -----------------------------------------------------
START TRANSACTION;

INSERT INTO compra_medicamento (codigo, fecha_compra, unidades, igic, importe) VALUES ('123456', '2019-11-08 10:35:00', 2, 0.25, 8.75);
INSERT INTO compra_medicamento (codigo, fecha_compra, unidades, igic, importe) VALUES ('445566', '2019-11-08 10:35:00', 1, 0.18, 6.30);
INSERT INTO compra_medicamento (codigo, fecha_compra, unidades, igic, importe) VALUES ('123456', '2019-11-08 10:45:00', 2, 0.25, 8.75);
INSERT INTO compra_medicamento (codigo, fecha_compra, unidades, igic, importe) VALUES ('112233', '2019-11-08 10:45:00', 1, 0.30, 10.50);
INSERT INTO compra_medicamento (codigo, fecha_compra, unidades, igic, importe) VALUES ('112233', '2019-11-08 10:55:00', 2, 0.61, 21.01);
INSERT INTO compra_medicamento (codigo, fecha_compra, unidades, igic, importe) VALUES ('445566', '2019-11-08 11:05:00', 1, 0.18, 6.30);
INSERT INTO compra_medicamento (codigo, fecha_compra, unidades, igic, importe) VALUES ('123456', '2019-11-08 11:05:00', 1, 0.13, 4.38);
INSERT INTO compra_medicamento (codigo, fecha_compra, unidades, igic, importe) VALUES ('21311B382AC', '2019-07-14T14:21:36.1+01:00', 3, 0.0, 23.34);
INSERT INTO compra_medicamento (codigo, fecha_compra, unidades, igic, importe) VALUES ('21992113482BB', '2019-06-23T08:07:45.1+01:00', 2, 0.17, 9.47);
INSERT INTO compra_medicamento (codigo, fecha_compra, unidades, igic, importe) VALUES ('9208132991F', '2019-09-11T22:05:53.1+01:00', 2, 0.0, 5.78);
INSERT INTO compra_medicamento (codigo, fecha_compra, unidades, igic, importe) VALUES ('921008472910TU', '2019-12-29T19:43:21.1+01:00', 1, 0.59, 17.44);
INSERT INTO compra_medicamento (codigo, fecha_compra, unidades, igic, importe) VALUES ('2191918450UI', '2019-07-17T17:38:43.1+01:00', 2, 0.30, 21.53);

COMMIT;


-- -----------------------------------------------------
-- Data for table pago_credito
-- -----------------------------------------------------
START TRANSACTION;

INSERT INTO pago_credito (mes, año, fecha_compra, cantidad) VALUES (11, 2019, '2019-11-08 10:35:00', 15.05);
INSERT INTO pago_credito (mes, año, fecha_compra, cantidad) VALUES (11, 2019, '2019-11-08 10:55:00', 21.01);
INSERT INTO pago_credito (mes, año, fecha_compra, cantidad) VALUES (8, 2019, '2019-07-14T14:21:36.1+01:00', 23.34);
INSERT INTO pago_credito (mes, año, fecha_compra, cantidad) VALUES (2, 2019, '2019-06-23T08:07:45.1+01:00', 9.47);
INSERT INTO pago_credito (mes, año, fecha_compra, cantidad) VALUES (3, 2019, '2019-09-11T22:05:53.1+01:00', 5.78);
INSERT INTO pago_credito (mes, año, fecha_compra, cantidad) VALUES (8, 2019, '2019-12-29T19:43:21.1+01:00', 17.44);
INSERT INTO pago_credito (mes, año, fecha_compra, cantidad) VALUES (7, 2019, '2019-07-17T17:38:43.1+01:00', 21.53);

COMMIT;

